#cloud-config

hostname: blackbramble00    #script this to change as needed to reflect hostnames?
manage_etc_hosts: true
apt_preserve_sources_list: true

## these don't seem to be required
# cloud_config_modules:
#   - runcmd
#   - ntp

cloud_final_modules:
  - scripts-user

locale: "en_US.UTF-8"
timezone: "America/Los_Angeles"

# ntp:
#   enabled: true
#   ntp_client: ntp

users:
  - name: skylar                # use any user name you like
    primary-group: users
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users,docker,adm,dialout,audio,plugdev,netdev,video
    ssh-import-id: None
    plain_text_passwd: __Change_me__
    lock_passwd: false
    ssh-authorized-keys:
      - ssh-rsa __insert_here__   # insert your SSH public key ~/.ssh/id_rsa.pub here

# # WiFi connect to HotSpot
# # - use `wpa_passphrase SSID PASSWORD` to encrypt the psk
write_files:
  # - content: |
  #     allow-hotplug wlan0
  #     iface wlan0 inet dhcp
  #     wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
  #     iface default inet dhcp
  #   path: /etc/network/interfaces.d/wlan0
  # - content: |
  #     country=us
  #     ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
  #     update_config=1
  #     network={
  #     ssid="American Football Sucks"
  #     psk="glasscaseofemotion"
  #     proto=RSN
  #     key_mgmt=WPA-PSK
  #     pairwise=CCMP
  #     auth_alg=OPEN
  #     }
  #   path: /etc/wpa_supplicant/wpa_supplicant.conf
  - content: |
      ## template:jinja
      {#
      This file (/etc/cloud/templates/hosts.debian.tmpl) is only utilized
      if enabled in cloud-config.  Specifically, in order to enable it
      you need to add the following to config:
        manage_etc_hosts: True
      -#}
      # Your system has configured 'manage_etc_hosts' as True.
      # As a result, if you wish for changes to this file to persist
      # then you will need to either
      # a.) make changes to the master file in /etc/cloud/templates/hosts.debian.tmpl
      # b.) change or remove the value of 'manage_etc_hosts' inÂ 
      #     /etc/cloud/cloud.cfg or cloud-config from user-data
      #
      {# The value '{{hostname}}' will be replaced with the local-hostname -#}
      127.0.1.1 {{fqdn}} {{hostname}}
      127.0.0.1 localhost

      # Black Bramble hosts
      192.168.1.187 blackbramble0m
      192.168.1.108 blackbramble01
      192.168.1.86  blackbramble02
      192.168.1.193 blackbramble03
      192.168.1.60  blackbramble04

      # The following lines are desirable for IPv6 capable hosts
      ::1 ip6-localhost ip6-loopback
      fe00::0 ip6-localnet
      ff00::0 ip6-mcastprefix
      ff02::1 ip6-allnodes
      ff02::2 ip6-allrouters
      ff02::3 ip6-allhosts
    path: /etc/cloud/templates/hosts.debian.tmpl
  - content: |
      [Unit]
      Requires=docker.service
      After=docker.service
      [Service]
      ExecStartPre=/sbin/iptables -P FORWARD ACCEPT
    path: /etc/systemd/system/kubelet.service.d/20-local.conf
  - content: |
      #!/bin/sh
      date
      sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
      sudo apt-get update -y && sudo apt-get install vim kubeadm
      kubeadm config images pull
    path: /var/lib/cloud/instance/scripts/10-bootstrapscript
    permissions: '0755'

runcmd:
  # - date
  # Add K8's repository
  # - 'curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg'
  # - 'echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list'
  # - 'apt-get update -y && apt-get install vim kubeadm'
  # Pickup the hostname changes
  # - systemctl restart avahi-daemon

#   # prepull images for k8's cluster
#   - kubeadm config images pull

  # Activate WiFi interface
  # - 'ifup wlan0'
package_update: true
# package_upgrade: false
# packages:
#   - vim
#   - kubeadm
